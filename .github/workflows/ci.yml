name: Anchor CI/CD
on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  REGISTRY: harbor.flochai.com
  REPO: anchor                      
  TAG: ${{ github.sha }}
  IMAGE: anchor

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 0) Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Unit tests (pytest)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run unit tests
        run: pytest -v

      # 2) Log in to Harbor 
      - name: Log in to Harbor
        uses: docker/login-action@v1
        with:
          registry: harbor.flochai.com
          username: ${{ secrets.HARBOR_USERNAME  }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      # 3) Build image 
      - name: Build Docker image
        run: |
          docker build -t "${{ env.REGISTRY }}/${{ env.REPO }}/${{ env.IMAGE }}:latest" \
                       -t "${{ env.REGISTRY }}/${{ env.REPO }}/${{ env.IMAGE }}:${{ env.TAG }}" .

      # 4) Scan image with Trivy (fail on CRITICAL)
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.REPO }}/${{ env.IMAGE }}:${{ env.TAG }}
          format: 'table'
          vuln-type: 'os,library'
          severity: 'CRITICAL'
          exit-code: '1'    

      # 5) Push image to Harbor (only if scan passed)
      - name: Push image to Harbor
        run: |
          docker push "${{ env.REGISTRY }}/${{ env.REPO }}/${{ env.IMAGE }}:${{ env.TAG }}"
          docker push "${{ env.REGISTRY }}/${{ env.REPO }}/${{ env.IMAGE }}:latest"
